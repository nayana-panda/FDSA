class Node:
    def __init__(self, data):
        self.data = data
        self.next = None  

class LinkedList:
    def __init__(self):
        self.head = None  
def insert_at_beginning(self, data):
        new_node = Node(data)      
        new_node.next = self.head  
        self.head = new_node       

    def print_list(self):
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")
        class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None
        def delete_node(self, data):
 if self.head is None:
            print("The list is empty.")
            return
  if self.head.data == data:
            self.head = self.head.next
            return
         Initialize current node as head
        current = self.head
         while current.next is not None:
            if current.next.data == data:
                
                current.next = current.next.next
                return
            current = current.next
         print("Data not found in the list.")
         def print_list(self):
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")



        
